/*
Val Town API

Val Town’s public API  OpenAPI JSON endpoint:  https://api.val.town/openapi.json

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package valgo

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ExtendedVal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtendedVal{}

// ExtendedVal A Val
type ExtendedVal struct {
	// The name of this val
	Name string `json:"name"`
	// This val’s id
	Id string `json:"id"`
	// The version of this val, starting at zero
	Version int32 `json:"version"`
	// TypeScript code associated with this val
	Code NullableString `json:"code"`
	// Whether this val is available publicly on Val Town
	Public bool `json:"public"`
	CreatedAt time.Time `json:"createdAt"`
	// This resource's privacy setting. Unlisted resources do not appear on profile pages or elsewhere, but you can link to them.
	Privacy string `json:"privacy"`
	// The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations
	Type string `json:"type"`
	// The URL of this resource on the Val Town website
	Url string `json:"url"`
	Links AliasVal200ResponseLinks `json:"links"`
	Author NullableAliasVal200ResponseAuthor `json:"author"`
	VersionCreatedAt *time.Time `json:"versionCreatedAt,omitempty"`
	// How many likes this val has received
	LikeCount int32 `json:"likeCount"`
	ReferenceCount int32 `json:"referenceCount"`
	// This val’s readme, as Markdown
	Readme NullableString `json:"readme"`
}

type _ExtendedVal ExtendedVal

// NewExtendedVal instantiates a new ExtendedVal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtendedVal(name string, id string, version int32, code NullableString, public bool, createdAt time.Time, privacy string, type_ string, url string, links AliasVal200ResponseLinks, author NullableAliasVal200ResponseAuthor, likeCount int32, referenceCount int32, readme NullableString) *ExtendedVal {
	this := ExtendedVal{}
	this.Name = name
	this.Id = id
	this.Version = version
	this.Code = code
	this.Public = public
	this.CreatedAt = createdAt
	this.Privacy = privacy
	this.Type = type_
	this.Url = url
	this.Links = links
	this.Author = author
	this.LikeCount = likeCount
	this.ReferenceCount = referenceCount
	this.Readme = readme
	return &this
}

// NewExtendedValWithDefaults instantiates a new ExtendedVal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtendedValWithDefaults() *ExtendedVal {
	this := ExtendedVal{}
	return &this
}

// GetName returns the Name field value
func (o *ExtendedVal) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExtendedVal) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *ExtendedVal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExtendedVal) SetId(v string) {
	o.Id = v
}

// GetVersion returns the Version field value
func (o *ExtendedVal) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ExtendedVal) SetVersion(v int32) {
	o.Version = v
}

// GetCode returns the Code field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ExtendedVal) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}

	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedVal) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// SetCode sets field value
func (o *ExtendedVal) SetCode(v string) {
	o.Code.Set(&v)
}

// GetPublic returns the Public field value
func (o *ExtendedVal) GetPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Public, true
}

// SetPublic sets field value
func (o *ExtendedVal) SetPublic(v bool) {
	o.Public = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ExtendedVal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ExtendedVal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetPrivacy returns the Privacy field value
func (o *ExtendedVal) GetPrivacy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetPrivacyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Privacy, true
}

// SetPrivacy sets field value
func (o *ExtendedVal) SetPrivacy(v string) {
	o.Privacy = v
}

// GetType returns the Type field value
func (o *ExtendedVal) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ExtendedVal) SetType(v string) {
	o.Type = v
}

// GetUrl returns the Url field value
func (o *ExtendedVal) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ExtendedVal) SetUrl(v string) {
	o.Url = v
}

// GetLinks returns the Links field value
func (o *ExtendedVal) GetLinks() AliasVal200ResponseLinks {
	if o == nil {
		var ret AliasVal200ResponseLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetLinksOk() (*AliasVal200ResponseLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *ExtendedVal) SetLinks(v AliasVal200ResponseLinks) {
	o.Links = v
}

// GetAuthor returns the Author field value
// If the value is explicit nil, the zero value for AliasVal200ResponseAuthor will be returned
func (o *ExtendedVal) GetAuthor() AliasVal200ResponseAuthor {
	if o == nil || o.Author.Get() == nil {
		var ret AliasVal200ResponseAuthor
		return ret
	}

	return *o.Author.Get()
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedVal) GetAuthorOk() (*AliasVal200ResponseAuthor, bool) {
	if o == nil {
		return nil, false
	}
	return o.Author.Get(), o.Author.IsSet()
}

// SetAuthor sets field value
func (o *ExtendedVal) SetAuthor(v AliasVal200ResponseAuthor) {
	o.Author.Set(&v)
}

// GetVersionCreatedAt returns the VersionCreatedAt field value if set, zero value otherwise.
func (o *ExtendedVal) GetVersionCreatedAt() time.Time {
	if o == nil || IsNil(o.VersionCreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.VersionCreatedAt
}

// GetVersionCreatedAtOk returns a tuple with the VersionCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetVersionCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.VersionCreatedAt) {
		return nil, false
	}
	return o.VersionCreatedAt, true
}

// HasVersionCreatedAt returns a boolean if a field has been set.
func (o *ExtendedVal) HasVersionCreatedAt() bool {
	if o != nil && !IsNil(o.VersionCreatedAt) {
		return true
	}

	return false
}

// SetVersionCreatedAt gets a reference to the given time.Time and assigns it to the VersionCreatedAt field.
func (o *ExtendedVal) SetVersionCreatedAt(v time.Time) {
	o.VersionCreatedAt = &v
}

// GetLikeCount returns the LikeCount field value
func (o *ExtendedVal) GetLikeCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LikeCount
}

// GetLikeCountOk returns a tuple with the LikeCount field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetLikeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LikeCount, true
}

// SetLikeCount sets field value
func (o *ExtendedVal) SetLikeCount(v int32) {
	o.LikeCount = v
}

// GetReferenceCount returns the ReferenceCount field value
func (o *ExtendedVal) GetReferenceCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ReferenceCount
}

// GetReferenceCountOk returns a tuple with the ReferenceCount field value
// and a boolean to check if the value has been set.
func (o *ExtendedVal) GetReferenceCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceCount, true
}

// SetReferenceCount sets field value
func (o *ExtendedVal) SetReferenceCount(v int32) {
	o.ReferenceCount = v
}

// GetReadme returns the Readme field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ExtendedVal) GetReadme() string {
	if o == nil || o.Readme.Get() == nil {
		var ret string
		return ret
	}

	return *o.Readme.Get()
}

// GetReadmeOk returns a tuple with the Readme field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExtendedVal) GetReadmeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Readme.Get(), o.Readme.IsSet()
}

// SetReadme sets field value
func (o *ExtendedVal) SetReadme(v string) {
	o.Readme.Set(&v)
}

func (o ExtendedVal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtendedVal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	toSerialize["version"] = o.Version
	toSerialize["code"] = o.Code.Get()
	toSerialize["public"] = o.Public
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["privacy"] = o.Privacy
	toSerialize["type"] = o.Type
	toSerialize["url"] = o.Url
	toSerialize["links"] = o.Links
	toSerialize["author"] = o.Author.Get()
	if !IsNil(o.VersionCreatedAt) {
		toSerialize["versionCreatedAt"] = o.VersionCreatedAt
	}
	toSerialize["likeCount"] = o.LikeCount
	toSerialize["referenceCount"] = o.ReferenceCount
	toSerialize["readme"] = o.Readme.Get()
	return toSerialize, nil
}

func (o *ExtendedVal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"id",
		"version",
		"code",
		"public",
		"createdAt",
		"privacy",
		"type",
		"url",
		"links",
		"author",
		"likeCount",
		"referenceCount",
		"readme",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExtendedVal := _ExtendedVal{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExtendedVal)

	if err != nil {
		return err
	}

	*o = ExtendedVal(varExtendedVal)

	return err
}

type NullableExtendedVal struct {
	value *ExtendedVal
	isSet bool
}

func (v NullableExtendedVal) Get() *ExtendedVal {
	return v.value
}

func (v *NullableExtendedVal) Set(val *ExtendedVal) {
	v.value = val
	v.isSet = true
}

func (v NullableExtendedVal) IsSet() bool {
	return v.isSet
}

func (v *NullableExtendedVal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtendedVal(val *ExtendedVal) *NullableExtendedVal {
	return &NullableExtendedVal{value: val, isSet: true}
}

func (v NullableExtendedVal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtendedVal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



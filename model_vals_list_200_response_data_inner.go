/*
Val Town API

Val Townâ€™s public API  OpenAPI JSON endpoint:  https://api.val.town/openapi.json

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package valgo

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ValsList200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValsList200ResponseDataInner{}

// ValsList200ResponseDataInner struct for ValsList200ResponseDataInner
type ValsList200ResponseDataInner struct {
	// Id of a val
	ValId string `json:"val_id"`
	// Version of the val
	Version int32 `json:"version"`
	CreatedAt time.Time `json:"createdAt"`
}

type _ValsList200ResponseDataInner ValsList200ResponseDataInner

// NewValsList200ResponseDataInner instantiates a new ValsList200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValsList200ResponseDataInner(valId string, version int32, createdAt time.Time) *ValsList200ResponseDataInner {
	this := ValsList200ResponseDataInner{}
	this.ValId = valId
	this.Version = version
	this.CreatedAt = createdAt
	return &this
}

// NewValsList200ResponseDataInnerWithDefaults instantiates a new ValsList200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValsList200ResponseDataInnerWithDefaults() *ValsList200ResponseDataInner {
	this := ValsList200ResponseDataInner{}
	return &this
}

// GetValId returns the ValId field value
func (o *ValsList200ResponseDataInner) GetValId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValId
}

// GetValIdOk returns a tuple with the ValId field value
// and a boolean to check if the value has been set.
func (o *ValsList200ResponseDataInner) GetValIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValId, true
}

// SetValId sets field value
func (o *ValsList200ResponseDataInner) SetValId(v string) {
	o.ValId = v
}

// GetVersion returns the Version field value
func (o *ValsList200ResponseDataInner) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ValsList200ResponseDataInner) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ValsList200ResponseDataInner) SetVersion(v int32) {
	o.Version = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ValsList200ResponseDataInner) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ValsList200ResponseDataInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ValsList200ResponseDataInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o ValsList200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValsList200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["val_id"] = o.ValId
	toSerialize["version"] = o.Version
	toSerialize["createdAt"] = o.CreatedAt
	return toSerialize, nil
}

func (o *ValsList200ResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"val_id",
		"version",
		"createdAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varValsList200ResponseDataInner := _ValsList200ResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varValsList200ResponseDataInner)

	if err != nil {
		return err
	}

	*o = ValsList200ResponseDataInner(varValsList200ResponseDataInner)

	return err
}

type NullableValsList200ResponseDataInner struct {
	value *ValsList200ResponseDataInner
	isSet bool
}

func (v NullableValsList200ResponseDataInner) Get() *ValsList200ResponseDataInner {
	return v.value
}

func (v *NullableValsList200ResponseDataInner) Set(val *ValsList200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableValsList200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableValsList200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValsList200ResponseDataInner(val *ValsList200ResponseDataInner) *NullableValsList200ResponseDataInner {
	return &NullableValsList200ResponseDataInner{value: val, isSet: true}
}

func (v NullableValsList200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValsList200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



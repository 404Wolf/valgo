/*
Val Town API

Val Town’s public API  OpenAPI JSON endpoint:  https://api.val.town/openapi.json

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ValsCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValsCreateRequest{}

// ValsCreateRequest Val information provided to create a new val
type ValsCreateRequest struct {
	// Val source code as TypeScript
	Code string `json:"code"`
	// This val’s name
	Name *string `json:"name,omitempty" validate:"regexp=^[a-zA-Z][a-zA-Z0-9_]*$"`
	// Readme contents, as Markdown
	Readme *string `json:"readme,omitempty"`
	// This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.
	Privacy *string `json:"privacy,omitempty"`
	// The type of the val you want to create. Note that this does not include interval vals, because they cannot be created through the API yet.
	Type *string `json:"type,omitempty"`
}

type _ValsCreateRequest ValsCreateRequest

// NewValsCreateRequest instantiates a new ValsCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValsCreateRequest(code string) *ValsCreateRequest {
	this := ValsCreateRequest{}
	this.Code = code
	var type_ string = "script"
	this.Type = &type_
	return &this
}

// NewValsCreateRequestWithDefaults instantiates a new ValsCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValsCreateRequestWithDefaults() *ValsCreateRequest {
	this := ValsCreateRequest{}
	var type_ string = "script"
	this.Type = &type_
	return &this
}

// GetCode returns the Code field value
func (o *ValsCreateRequest) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ValsCreateRequest) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ValsCreateRequest) SetCode(v string) {
	o.Code = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ValsCreateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValsCreateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ValsCreateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ValsCreateRequest) SetName(v string) {
	o.Name = &v
}

// GetReadme returns the Readme field value if set, zero value otherwise.
func (o *ValsCreateRequest) GetReadme() string {
	if o == nil || IsNil(o.Readme) {
		var ret string
		return ret
	}
	return *o.Readme
}

// GetReadmeOk returns a tuple with the Readme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValsCreateRequest) GetReadmeOk() (*string, bool) {
	if o == nil || IsNil(o.Readme) {
		return nil, false
	}
	return o.Readme, true
}

// HasReadme returns a boolean if a field has been set.
func (o *ValsCreateRequest) HasReadme() bool {
	if o != nil && !IsNil(o.Readme) {
		return true
	}

	return false
}

// SetReadme gets a reference to the given string and assigns it to the Readme field.
func (o *ValsCreateRequest) SetReadme(v string) {
	o.Readme = &v
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *ValsCreateRequest) GetPrivacy() string {
	if o == nil || IsNil(o.Privacy) {
		var ret string
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValsCreateRequest) GetPrivacyOk() (*string, bool) {
	if o == nil || IsNil(o.Privacy) {
		return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *ValsCreateRequest) HasPrivacy() bool {
	if o != nil && !IsNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given string and assigns it to the Privacy field.
func (o *ValsCreateRequest) SetPrivacy(v string) {
	o.Privacy = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ValsCreateRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValsCreateRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ValsCreateRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ValsCreateRequest) SetType(v string) {
	o.Type = &v
}

func (o ValsCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValsCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Readme) {
		toSerialize["readme"] = o.Readme
	}
	if !IsNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

func (o *ValsCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varValsCreateRequest := _ValsCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varValsCreateRequest)

	if err != nil {
		return err
	}

	*o = ValsCreateRequest(varValsCreateRequest)

	return err
}

type NullableValsCreateRequest struct {
	value *ValsCreateRequest
	isSet bool
}

func (v NullableValsCreateRequest) Get() *ValsCreateRequest {
	return v.value
}

func (v *NullableValsCreateRequest) Set(val *ValsCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableValsCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableValsCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValsCreateRequest(val *ValsCreateRequest) *NullableValsCreateRequest {
	return &NullableValsCreateRequest{value: val, isSet: true}
}

func (v NullableValsCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValsCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



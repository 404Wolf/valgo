/*
Val Town API

Val Town’s public API  OpenAPI JSON endpoint:  https://api.val.town/openapi.json

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package valgo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MeGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MeGet200Response{}

// MeGet200Response Your user information, with tier and email included
type MeGet200Response struct {
	// The ID of this user
	Id string `json:"id"`
	// The user’s biography, if they have provided one
	Bio NullableString `json:"bio"`
	// The user’s handle that they chose for themselves. Does not include the @ symbol
	Username NullableString `json:"username"`
	// URL that points to the user’s profile image, if one exists
	ProfileImageUrl NullableString `json:"profileImageUrl"`
	// URL of this user’s profile on Val Town’s website
	Url string `json:"url"`
	Links MeGet200ResponseLinks `json:"links"`
	// Your account tier
	Tier NullableString `json:"tier"`
	// Your email address
	Email string `json:"email"`
}

type _MeGet200Response MeGet200Response

// NewMeGet200Response instantiates a new MeGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeGet200Response(id string, bio NullableString, username NullableString, profileImageUrl NullableString, url string, links MeGet200ResponseLinks, tier NullableString, email string) *MeGet200Response {
	this := MeGet200Response{}
	this.Id = id
	this.Bio = bio
	this.Username = username
	this.ProfileImageUrl = profileImageUrl
	this.Url = url
	this.Links = links
	this.Tier = tier
	this.Email = email
	return &this
}

// NewMeGet200ResponseWithDefaults instantiates a new MeGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeGet200ResponseWithDefaults() *MeGet200Response {
	this := MeGet200Response{}
	return &this
}

// GetId returns the Id field value
func (o *MeGet200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MeGet200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MeGet200Response) SetId(v string) {
	o.Id = v
}

// GetBio returns the Bio field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MeGet200Response) GetBio() string {
	if o == nil || o.Bio.Get() == nil {
		var ret string
		return ret
	}

	return *o.Bio.Get()
}

// GetBioOk returns a tuple with the Bio field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeGet200Response) GetBioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bio.Get(), o.Bio.IsSet()
}

// SetBio sets field value
func (o *MeGet200Response) SetBio(v string) {
	o.Bio.Set(&v)
}

// GetUsername returns the Username field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MeGet200Response) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}

	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeGet200Response) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// SetUsername sets field value
func (o *MeGet200Response) SetUsername(v string) {
	o.Username.Set(&v)
}

// GetProfileImageUrl returns the ProfileImageUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MeGet200Response) GetProfileImageUrl() string {
	if o == nil || o.ProfileImageUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProfileImageUrl.Get()
}

// GetProfileImageUrlOk returns a tuple with the ProfileImageUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeGet200Response) GetProfileImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProfileImageUrl.Get(), o.ProfileImageUrl.IsSet()
}

// SetProfileImageUrl sets field value
func (o *MeGet200Response) SetProfileImageUrl(v string) {
	o.ProfileImageUrl.Set(&v)
}

// GetUrl returns the Url field value
func (o *MeGet200Response) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MeGet200Response) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MeGet200Response) SetUrl(v string) {
	o.Url = v
}

// GetLinks returns the Links field value
func (o *MeGet200Response) GetLinks() MeGet200ResponseLinks {
	if o == nil {
		var ret MeGet200ResponseLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *MeGet200Response) GetLinksOk() (*MeGet200ResponseLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *MeGet200Response) SetLinks(v MeGet200ResponseLinks) {
	o.Links = v
}

// GetTier returns the Tier field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MeGet200Response) GetTier() string {
	if o == nil || o.Tier.Get() == nil {
		var ret string
		return ret
	}

	return *o.Tier.Get()
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MeGet200Response) GetTierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tier.Get(), o.Tier.IsSet()
}

// SetTier sets field value
func (o *MeGet200Response) SetTier(v string) {
	o.Tier.Set(&v)
}

// GetEmail returns the Email field value
func (o *MeGet200Response) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *MeGet200Response) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *MeGet200Response) SetEmail(v string) {
	o.Email = v
}

func (o MeGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MeGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["bio"] = o.Bio.Get()
	toSerialize["username"] = o.Username.Get()
	toSerialize["profileImageUrl"] = o.ProfileImageUrl.Get()
	toSerialize["url"] = o.Url
	toSerialize["links"] = o.Links
	toSerialize["tier"] = o.Tier.Get()
	toSerialize["email"] = o.Email
	return toSerialize, nil
}

func (o *MeGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"bio",
		"username",
		"profileImageUrl",
		"url",
		"links",
		"tier",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMeGet200Response := _MeGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMeGet200Response)

	if err != nil {
		return err
	}

	*o = MeGet200Response(varMeGet200Response)

	return err
}

type NullableMeGet200Response struct {
	value *MeGet200Response
	isSet bool
}

func (v NullableMeGet200Response) Get() *MeGet200Response {
	return v.value
}

func (v *NullableMeGet200Response) Set(val *MeGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMeGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMeGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeGet200Response(val *MeGet200Response) *NullableMeGet200Response {
	return &NullableMeGet200Response{value: val, isSet: true}
}

func (v NullableMeGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


